# 1. Создать класс Coord (координата), который при инициализации будет получать координаты (х,
# у).
# 2. Создать класс Shot (выстрел), который будет наследником класса Coord.
# 3. В классе Coord создать метод, принимающий длину корабля.
# 4. В класс Coord создать метод, принимающий имя корабля.
# 5. В классе Coord создать метод, который проверял бы, достроен ли кораблик до конца
# (соответствует ли количество координат длине кораблика). (по​​желанию).
# 6. *В классе Shot (выстрел) создать метод, который проверял бы и выводил состояние
# кораблика (ранен/убит) или, если выстрел не попал по кораблику, то “мимо”. Подумайте, какие
# аргументы должен принимать такой метод и как запоминать, какие выстрелы уже были
# сделаны.

class Coord
    attr_accessor :x, :y
    def initialize (x, y)
        @x = x
        @y = y
    end

    def ship_name
      puts 'What is ship name?'
      @name = gets
    end
end

class Shot < Coord

end

c = Coord.new 5, 4
c.ship_name

        
__END__
# Объект кораблик
boat = Object.new


# Метод, возвращающий информацию о том, кому кораблик принадлежит (свой или вражеский)
def boat.own?
    false    
end

# Метод, возвращающий информацию о том, сколько клеток занимает кораблик (от 1-й до 4-ех)
def boat.length (l)
    if l < 1 || l > 4
        return puts 'длина кораблика от 1 до 4'
    end    
    puts l
end

# Методы определяющие координаты кораблика
def boat.coord (a)
    print a
end

# Метод, возвращающий информацию о состоянии кораблика (убит/ранен/цел). Подумайте, как это можно реализовать при помощи boolean-методов.

def boat.state (state)
   case state
       when 0
        puts 'убит'
       when 1
        puts 'целый'
       when 2
        puts 'ранен'
   end
end

# объект выстрел
shut = Object.new

# Метод, принимающий координату (пока что для простоты просто Х) и определяющий, попал ли этот выстрел в корабль (список координат вражеского корабля хранится в массиве enemy_ship)
def shut.coord (x)
    for i in (enemy_ship(0)..enemy_ship(-1))
       if x == enemy_ship(i)
            state = 2
           print 'ранен'
        end
end


if boat.own?
    puts 'Свой кораблик'
else
    puts 'Чужой кораблик'
end

boat.length 3
boat.coord ['c', 6, 'b', 8]
shut.coord ['d', 7]
boat.state (1)

# *Создать объект выстрел и реализовать следующие его методы:
# a. Метод, принимающий координату (х, у) и определяющий, попал ли этот выстрел в корабль (список координат вражеского корабля хранится в двумерном массиве enemy_ship)
# b. Метод как в предыдущем задании, но координату пользователь вводит с консоли.